// Code generated by mockery v1.0.0
package mocks

import accounts "github.com/muhammadaser/cash_deposit/accounts"
import mock "github.com/stretchr/testify/mock"

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// GetAccount provides a mock function with given fields: accountID
func (_m *Store) GetAccount(accountID string) (accounts.Account, error) {
	ret := _m.Called(accountID)

	var r0 accounts.Account
	if rf, ok := ret.Get(0).(func(string) accounts.Account); ok {
		r0 = rf(accountID)
	} else {
		r0 = ret.Get(0).(accounts.Account)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accountID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetListAccounts provides a mock function with given fields:
func (_m *Store) GetListAccounts() ([]accounts.Account, error) {
	ret := _m.Called()

	var r0 []accounts.Account
	if rf, ok := ret.Get(0).(func() []accounts.Account); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]accounts.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostAccount provides a mock function with given fields: account
func (_m *Store) PostAccount(account accounts.Account) error {
	ret := _m.Called(account)

	var r0 error
	if rf, ok := ret.Get(0).(func(accounts.Account) error); ok {
		r0 = rf(account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
